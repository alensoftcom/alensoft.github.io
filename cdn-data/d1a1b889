# Task360. Интеграция поддержки Security в REST API (на примере **Spring Security**)

### Дано:

- Разрабатываемая система обрабатывает сущности **{{Author}}**, **{{News}}**, **{{Tag}}** и **{{Comment}}**,
  которые логически связаны отношениями (см. предыдущие задачи)
    - один-ко-многим (**{{Author}}** и **{{News}}**, **{{News}}** и **{{Comment}}**)
    - многие-ко-многим (**{{News}}**, **{{Tag}}**).

### **Цель:** Разработать и интегрировать систему аутентификации и авторизации в существующий REST API.

**Описание:**

У вас есть готовый REST API, который сейчас работает без аутентификации и авторизации. Ваша задача - добавить поддержку Spring Security для защиты API.

Конечная цель состоит в следующем:

1. Добавить необходимые зависимости в свой проект.
2. Настроить базовую аутентификацию с использованием firstname/password из **{{Author}}**.
3. Реализовать защиту REST API.
4. Добавить функционал ролей пользователей (admin, customer).
5. Реализовать механизм аутентификации через JWT (JSON Web Tokens).

**Требования:**

Схема регистрации и использования защищенных ресурсов:

![sequence-diagram](media/360.svg)


1. Использовать Spring Security для реализации аутентификации и авторизации.
3. Реализовать контроллер для регистрации новых пользователей.
4. Защитить все эндпоинты, требующие аутентификации.
5. Реализовать методы для получения текущего пользователя и его роли.
6. Добавить обработку ошибок аутентификации и авторизации.
7. Реализовать генерацию и валидацию JWT токенов.

**Дополнительные задания:**

1. Добавить поддержку социальной аутентификации (например, через Facebook или Google).
2. Реализовать двухфакторную аутентификацию.
3. Создать API для управления пользователями и их ролями.

